{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["createServer","routes","this","get","id","name","timing","getUsersApi","a","axios","data","App","useQuery","isFetching","status","isLoading","path","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAMAA,YAAa,CACXC,OADW,WAETC,KAAKD,OAAS,IACdC,KAAKC,IACH,cACA,iBAAM,CACJ,CAAEC,GAAI,IAAKC,KAAM,MACjB,CAAED,GAAI,IAAKC,KAAM,UACjB,CAAED,GAAI,IAAKC,KAAM,YAEnB,CAAEC,OAAQ,SAKhB,IAAMC,EAAW,uCAAG,4BAAAC,EAAA,sEACCC,IAAMN,IAAI,cADX,cACZO,EADY,0BAEP,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMA,OAAQ,CAAC,aAFJ,2CAAH,qDA8BFC,MAzBf,WAAgB,IAAD,EACmCC,YAC9C,WACAL,GAFMG,EADK,EACLA,KAAMG,EADD,EACCA,WAAYC,EADb,EACaA,OAAQC,EADrB,EACqBA,UAKlC,MAAe,YAAXD,GAAwBD,GAAcE,EACjC,cAIP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,6BACGN,EAAKO,KAAI,SAACC,GAAD,OACR,6BAAmBA,EAAKb,MAAfa,EAAKd,gBC9Bbe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7f66169f.chunk.js","sourcesContent":["import React from \"react\";\nimport { createServer } from \"miragejs\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\ncreateServer({\n  routes() {\n    this.routes = 1000;\n    this.get(\n      \"/api/users\",\n      () => [\n        { id: \"1\", name: \"PB\" },\n        { id: \"2\", name: \"Pranav\" },\n        { id: \"3\", name: \"Kumar\" },\n      ],\n      { timing: 750 }\n    );\n  },\n});\n\nconst getUsersApi = async () => {\n  const data = await axios.get(\"/api/users\");\n  return data?.data || [\"No Users\"];\n};\n\nfunction App() {\n  const { data, isFetching, status, isLoading } = useQuery(\n    \"getUsers\",\n    getUsersApi\n  );\n\n  if (status === \"loading\" || isFetching || isLoading) {\n    return \"Loading....\";\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <ul>\n            {data.map((user) => (\n              <li key={user.id}>{user.name}</li>\n            ))}\n          </ul>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}